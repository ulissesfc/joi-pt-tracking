// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: trips.sql

package db

import (
	"context"
)

const insertDataTrip = `-- name: InsertDataTrip :one
INSERT INTO data_trip (
  vehicle_prefix,
  latitude,
  longitude,
  shape_id,
  trip_id,
  trip_status,
  trip_progress,
  trip_delay,
  stop_distance,
  stop_order,
  report_time_diff
) VALUES (
  $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11
)
RETURNING id, vehicle_prefix, latitude, longitude, shape_id, trip_id, trip_status, trip_progress, trip_delay, stop_distance, stop_order, report_time_diff
`

type InsertDataTripParams struct {
	VehiclePrefix  string
	Latitude       float32
	Longitude      float32
	ShapeID        string
	TripID         string
	TripStatus     string
	TripProgress   int16
	TripDelay      int16
	StopDistance   float32
	StopOrder      int16
	ReportTimeDiff int16
}

func (q *Queries) InsertDataTrip(ctx context.Context, arg InsertDataTripParams) (DataTrip, error) {
	row := q.db.QueryRowContext(ctx, insertDataTrip,
		arg.VehiclePrefix,
		arg.Latitude,
		arg.Longitude,
		arg.ShapeID,
		arg.TripID,
		arg.TripStatus,
		arg.TripProgress,
		arg.TripDelay,
		arg.StopDistance,
		arg.StopOrder,
		arg.ReportTimeDiff,
	)
	var i DataTrip
	err := row.Scan(
		&i.ID,
		&i.VehiclePrefix,
		&i.Latitude,
		&i.Longitude,
		&i.ShapeID,
		&i.TripID,
		&i.TripStatus,
		&i.TripProgress,
		&i.TripDelay,
		&i.StopDistance,
		&i.StopOrder,
		&i.ReportTimeDiff,
	)
	return i, err
}
